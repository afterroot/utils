def LIB_GROUP_ID = "com.afterroot"
def LIB_ARTIFACT_ID = "utils"
def LIB_VERSION = ext.myVersion

group LIB_GROUP_ID
version LIB_VERSION

project.ext {
    mavGitUrl = "https://maven.pkg.github.com/afterroot/utils"
    mavLibraryDescription = "Utils for AfterROOT Apps"
    mavLibraryLicense = "http://www.apache.org/licenses/LICENSE-2.0.txt"
    mavProjectName = "utils"
    mavPublishToMavenLocal = !System.getenv("CI")
    mavSiteUrl = "https://afterroot.web.app"
}

tasks.register("sourceJar", Jar) {
    from(android.sourceSets.main.java.srcDirs)
    archiveClassifier = "sources"
}

def publishPropertiesFile = file("publish.properties")
def properties = new Properties()
if (publishPropertiesFile.exists()) {
    properties.load(new FileInputStream(publishPropertiesFile))
}

//Publish to GitHub Packages
publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            description = mavLibraryDescription
            url = uri("https://maven.pkg.github.com/afterroot/utils")
            credentials {
                username = properties.getProperty("gpr.user") ?: System.getenv("USERNAME")
                password = properties.getProperty("gpr.key") ?: System.getenv("TOKEN")
            }
        }
        maven {
            name = "CustomMavenRepo"
            url = "file://${buildDir}/repo"
        }
    }
    publications {
        utils(MavenPublication) {
            groupId LIB_GROUP_ID
            artifactId LIB_ARTIFACT_ID
            version LIB_VERSION
            artifact("$buildDir/outputs/aar/lib-release.aar")
            artifact(sourceJar)

            pom.withXml {
                def root = asNode()

                root.appendNode("name", mavProjectName)
                root.appendNode("description", mavLibraryDescription)
                root.appendNode("url", mavSiteUrl)

                // Add license part
                def licensesNode = root.appendNode("licenses")
                def licenseNode = licensesNode.appendNode("license")
                licenseNode.appendNode("url", mavLibraryLicense)

                // Add developers part
                def developersNode = root.appendNode("developers")
                def developerNode = developersNode.appendNode("developer")

                developerNode.appendNode("id", properties.getProperty("gpr.user") ?: System.getenv("USERNAME"))

                // Add SCM part
                def scmNode = root.appendNode("scm")
                scmNode.appendNode("connection", mavGitUrl)
                scmNode.appendNode("developerConnection", mavGitUrl)
                scmNode.appendNode("url", mavSiteUrl)

                Map<String, Dependency> dependencies = new HashMap<>()

                def addDependency = { Dependency dep ->
                    if (dep.group == null || dep.version == null)
                        return
                    dependencies.put(dep.name, dep)
                }

                configurations.api.allDependencies.each(addDependency)
                configurations.implementation.allDependencies.each(addDependency)

                def dependenciesNode = root.appendNode("dependencies")

                dependencies.values().each {
                    def dependencyNode = dependenciesNode.appendNode("dependency")
                    dependencyNode.appendNode("groupId", it.group)
                    dependencyNode.appendNode("artifactId", it.name)
                    dependencyNode.appendNode("version", it.version)
                }
            }
        }
    }
}
