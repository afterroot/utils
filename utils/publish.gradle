def LIB_GROUP_ID = 'com.afterroot'
def LIB_ARTIFACT_ID = 'utils'
def LIB_VERSION = ext.myVersion

group LIB_GROUP_ID
version LIB_VERSION

project.ext {
    mavGitUrl = 'https://maven.pkg.github.com/afterroot/utils'
    mavLibraryDescription = "Utils for AfterROOT Apps"
    mavLibraryLicenses = ["Apache-2.0": 'http://www.apache.org/licenses/LICENSE-2.0.txt']
    mavProjectName = 'utils'
    mavPublishToMavenLocal = !System.getenv("CI")
    mavSiteUrl = 'https://afterroot.web.app'
}

task sourceJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier "sources"
}

def publishPropertiesFile = file("publish.properties")
def properties = new Properties()
if (publishPropertiesFile.exists()) {
    properties.load(new FileInputStream(publishPropertiesFile))
}

//Publish to GitHub Packages
publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            description = mavLibraryDescription
            url = uri("https://maven.pkg.github.com/afterroot/utils")
            credentials {
                username = properties.getProperty("gpr.user") ?: System.getenv("USERNAME")
                password = properties.getProperty("gpr.key") ?: System.getenv("TOKEN")
            }
        }
        maven {
            name = 'CustomMavenRepo'
            url = "file://${buildDir}/repo"
        }
    }
    publications {
        utils(MavenPublication) {
            groupId LIB_GROUP_ID
            artifactId LIB_ARTIFACT_ID
            version LIB_VERSION
            artifact("$buildDir/outputs/aar/utils-release.aar")
            artifact(sourceJar)

            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')

                //Iterate over the compile dependencies (we don't want the test ones), adding a <dependency> node for each
                configurations.api.allDependencies.each {
                    def dependencyNode = dependenciesNode.appendNode('dependency')
                    dependencyNode.appendNode('groupId', it.group)
                    dependencyNode.appendNode('artifactId', it.name)
                    dependencyNode.appendNode('version', it.version)
                }
            }
        }
    }
}
